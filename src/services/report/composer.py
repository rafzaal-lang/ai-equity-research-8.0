from __future__ import annotations
from typing import Dict, Any
from jinja2 import Template

TEMPLATE = Template("""# {{ symbol }} — Equity Research Note (as of {{ as_of }})
**Call:** {{ call }}
**Conviction:** {{ conviction }} / 10
**Target Range:** {{ target_low }} – {{ target_high }}

## Macro Snapshot
- Regime: **{{ macro.regime }}**
- 10Y: {{ macro.ten_year_last }} | Fed Funds: {{ macro.fed_funds_last }} | HY OAS: {{ macro.hy_oas_last }}
- CPI (last): {{ macro.cpi_last }}

## Quant Signals
{% for k,v in quant.momentum.items() %}- {{ k }}: {{ '%.2f%%' | format(v*100) if v is not none else 'n/a' }}
{% endfor -%}
- RSI(14): {{ '%.1f' | format(quant.rsi) if quant.rsi is not none else 'n/a' }}
- SMA Cross (20/50): {{ quant.sma.cross if quant.sma.cross is not none else 'n/a' }}

## Fundamentals (TTM / Latest)
- Gross Margin: {{ fundamentals.margins.gross_margin | default('n/a') }}
- Operating Margin: {{ fundamentals.margins.operating_margin | default('n/a') }}
- Net Margin: {{ fundamentals.margins.net_margin | default('n/a') }}
- FCF: {{ fundamentals.reported.free_cash_flow | default('n/a') }}

## Valuation (Quick DCF)
- EV (model): {{ dcf.enterprise_value }}
- Terminal value share: {{ '%.0f%%' | format((dcf.terminal_value_pct or 0)*100) }}

## Comps (selected peers: {{ comps.peers | length }})
| Ticker | P/E | P/S | EV/EBITDA | MktCap |
|---|---:|---:|---:|---:|
{% for r in comps.peers %}| {{ r.ticker }} | {{ r.pe | default('n/a') }} | {{ r.ps | default('n/a') }} | {{ r.ev_ebitda | default('n/a') }} | {{ r.market_cap | default('n/a') }} |
{% endfor %}

## What changed
- (auto-fill from diffs in statements/prices)

---
*Generated by Equity Research Platform*
""")

def compose(data: Dict[str, Any]) -> str:
    return TEMPLATE.render(**data)

